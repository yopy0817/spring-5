<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 스프링 설정 파일 -->
	
	<!-- 컴포넌트 스캔을 통해 만들어진 bean들에 uri 를 맵핑 한다.(HandlerMapping, Adapter) --> 
	<!-- 해당 태그가 없으면 Controller맵핑을 할 수 없음 -->
	<!-- 어노테이션을 사용가능하도록 설정 -->
	<annotation-driven />
	
	<!-- mapping으로 들어온 요청에 대해 location으로 매핑시킨다. -->
	<!-- 일반 적으로 css, script 파일들이 들어감 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 리졸버 뷰 입니다.(뷰 해석기) -->
	<!-- 컨트롤러에서 받은 view정보를 /WEB-INF/views/이름.jsp  이름만으로 맵핑하게 해줍니다.  -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 접두사:파일경로 -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<!-- 접미어:확장자명 -->
		<beans:property name="suffix" value=".jsp" />
		
	</beans:bean>
	
	<!-- 요청이 들어올 때 base-package에 기술된 패키지를 스캔합니다 -->
	<!-- 해당 패키지에 있는 클래스들 중에 @Component 어노테이션의 클래스를 컨테이너에 생성합니다 -->
	<!-- 마찬가지로 해당 태그가 없으면 controller태그, mapping태그를 확인할 수 없음 -->
	<!-- @Component,@Repository,@Service, @Controller 가붙은 객체 생성-->


	<context:component-scan base-package="com.zerock.controller" />


	 
	<!-- component-scan, @Controller어노테이션이 없다면 이렇게 빈을 직접 생성해야 한다 -->
	<!-- 
	<beans:bean class="com.zerock.controller.HomeController"/>
	<beans:bean class="com.zerock.controller.RequestController"/>
	<beans:bean class="com.zerock.controller.ResponseController"/>
	 -->
	
	
	
	
</beans:beans>
